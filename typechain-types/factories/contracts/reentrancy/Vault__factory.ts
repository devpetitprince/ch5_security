/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Vault,
  VaultInterface,
} from "../../../contracts/reentrancy/Vault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555061063d806100286000396000f3fe60806040526004361061002d5760003560e01c8063f14210a614610039578063f6326fb31461006257610034565b3661003457005b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610340565b61006c565b005b61006a61020a565b005b6100746102ab565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156100f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ed906103ca565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff811115610178576101776103ea565b5b6040519080825280601f01601f1916602001820160405280156101aa5781602001600182028036833780820191505090505b506040516101b89190610493565b60006040518083038185875af1925050503d80600081146101f5576040519150601f19603f3d011682016040523d82523d6000602084013e6101fa565b606091505b50509050506102076102fb565b50565b6000341161024d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610244906104f6565b60405180910390fd5b600034905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a19190610545565b9250508190555050565b600260005414156102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e8906105e7565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b6000819050919050565b61031d8161030a565b811461032857600080fd5b50565b60008135905061033a81610314565b92915050565b60006020828403121561035657610355610305565b5b60006103648482850161032b565b91505092915050565b600082825260208201905092915050565b7f6e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b60006103b460128361036d565b91506103bf8261037e565b602082019050919050565b600060208201905081810360008301526103e3816103a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561044d578082015181840152602081019050610432565b8381111561045c576000848401525b50505050565b600061046d82610419565b6104778185610424565b935061048781856020860161042f565b80840191505092915050565b600061049f8284610462565b915081905092915050565b7f6465706f736974207a65726f20616d6f756e7400000000000000000000000000600082015250565b60006104e060138361036d565b91506104eb826104aa565b602082019050919050565b6000602082019050818103600083015261050f816104d3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105508261030a565b915061055b8361030a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105905761058f610516565b5b828201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006105d1601f8361036d565b91506105dc8261059b565b602082019050919050565b60006020820190508181036000830152610600816105c4565b905091905056fea2646970667358221220cc5d0f0d6a4d02103bea60252abadcc52c9c46094a0d8a30fc7784b1d2719dff64736f6c63430008090033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
